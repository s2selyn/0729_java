package com.kh.chap03.escape;

import java.util.Scanner;

public class A_Break {
	
	/*
	 * ** 주의사항 : switch문 내부에 작성하는 break문과는 구분을 해야할 필요가 있음!
	 * 				switch문 내부에 있는 break는 switch문을 빠져나가는 용도로 사용(switch 스코프를 나가는 것, 아래로 안 내려가게 하는 것)
	 * break : break문을 만나는 순간 "가장 가까운 반복문"을 빠져나감(반복문을 빠져나가는 용도, 반복문에 브레이크 걸기)
	 * 			break;문이 속해 있는 반복문 "한 겹"만 빠져나감!!!!!
	 * 
	 */
	
	// 반복문 탈출해보기!
	public void method1() { // 읽을 때는 메서드, 쓸 때는 메소드
		
		// System.out.println("안뇽 나는 메소드 1이얌~"); //해봤으면 주석처리
		
		// 반복을 무한하게, 무한 반복하면서 랜덤한 정수(1 ~ 100)를 생성해서 출력하다가
		// 50이 생성되면 반복을 중단!
		
		// 일단 무한 반복할건데, 반복문 두 개 배웠음
		// 지금은 while을 써야 함, 몇 번 돌릴 지 아리까리하니까 while이 적합
		while(/*무한 반복시킬때는 조건을 뭐라고 작성?*/ true) {
			
			int num = (int)(Math.random() * 100) + 1; // 1부터 시작, 100까지 범위(개수)
			// random 메소드로 생성되는 것은 0.0 ~ 0.9999999999999999
			// * 100을 하면 0.0 ~ 99.9999999999999999
			// 정수형으로 형변환(int) 하면 0 ~ 99
			// + 1을 하면 1 ~ 100
			
			System.out.println(num);
			
			// 생성된 정수값이 50이면 멈춰! 를 하고싶음 --> (생성된 정수값이 50이면) 이건 조건이다! --> if
			if(/*생성된 정수값은 num을 보면 알 수 있고, 50은 50이고, 이면 은 비교밖에 없음, 동등비교!*/ num == 50) {
				System.out.println("멈춰!"); // 50을 만나면 출력 해주고
				break; // break를 만남, 자신이 속해있는 가장 가까운 반복문 스코프의 바깥으로 나감
			}
			
		} // break를 만나고 나면 여기로 나옴, 자신이 포함된 가장 가까운 반복문을 멈춰!
		
	} // 메소드 선언했으면 메인 메소드에서 호출해서 출력문 실행해보기, 다했으면 메인 메소드에서 주석처리
	
	// 주도적으로 조작할 수 있는 프로그램 만들어보기
	public void method2() {
		
		// 무한 반복하면서 사용자에게 매 번 문자열을 입력받은 후
		// 해당 문자열의 길이를 출력, 그냥 출력하는 건 재미없다고 하심...ㅋ
		// 단, 사용자가 입력한 문자열이 "exit"과 같다면 반복을 종료
		
		// 스캐너가 있어야겠죠? 입력을 받을거니까
		Scanner sc = new Scanner(System.in);
		
		// 무한히 반복할거니까 반복문이 있어야겠지
		while(true) {
			
			System.out.print("아무거나쓰셈(종료를 원하신다면 'exit'을 입력해주세요) > ");
			String keyword = sc.nextLine(); // 사용자가 입력한 것을 저장해둘 변수 선언과 초기화
			
			System.out.println(keyword + "은(는) " + keyword.length() + "글자 입니다!"); // 길이를 알려주는 메소드가 있음 --> length()
			// 공백문자도 한글자로 계산함
			
			if(keyword.equals("exit")) { // 입력한 문자값이 "exit"과 동일하다면
			
				System.out.println("후로구래무를 종료합니다~");
				break;
				
			}
			
		} // break를 만나면 내가 포함된 반복문 중에서 가장 가까운 반복문을 나감!
		
	} // 해봤으면 메인 메소드에서 주석처리
	
	// 매 번 사용자로부터 정수값을 입력받고
	// 만약 입력한 숫자가 0보다 작다면 "프로그램을 종료합니다"라는 문구를 출력하고 종료하시5!
	public void method3() {
		
		// 위에거랑 똑같고 문자열만 정수로 바뀐 것
		Scanner sc = new Scanner(System.in); // 입력을 받아야 하니까 스캐너가 있어야 할 것 같음
		
		while(true) { // 반복을 돌릴 것
			
			System.out.print("숫자를 입력해보아요(음수 입력하면 종료) > "); // 정수를 입력해달라고 하자
			int num = sc.nextInt(); // 정수값 받기
			
			// System.out.println("입력하신 정수는 " + num + "입니다.");
			// 이렇게 하면 음수 입력한 것도 출력됨
			
			if(num < 0) {
				
				System.out.println("프로그램을 종료합니다.");
				break; // 반복문 탈출
				
			}
		
			System.out.println("입력한 정수 > " + num);
			// 이렇게 하면 음수 입력한 건 출력 안됨
			
		}
		
	} // 해봤으면 메인 메소드에서 주석처리
	
	/*
	 * 사용자로부터 한 개의 정수값을 입력받아서
	 * 입력받은 숫자부터 1까지의 모든 숫자를 출력해보아요.
	 * 
	 * 단, 입력받는 정수는 1보다 커야합니다.
	 * 
	 * 만약 1미만의 숫자를 입력받았다면 "1이상의 숫자를 입력해주세요"라고 출력한 뒤
	 * 다시 사용자에게 값을 입력받을 수 있도록 만들어보아요
	 * 
	 * 출력 예시 )
	 * 1이상의 숫자를 입력하세요 > 4
	 * 4 3 2 1
	 * 
	 * 1이상의 숫자를 입력하세요 > -1
	 * 1이상의 숫자를 입력하세요!!!!!
	 * 1이상의 숫자를 입력하세요 > 6
	 * 6 5 4 3 2 1
	 * 
	 */
	public void method4() {
		
		Scanner sc = new Scanner(System.in);
		// 여기까진 확정
		
		// 최대한 단순하게!
		// 궁극적인 목표는 4를 입력받으면 4 3 2 1로 출력하고 싶음 --> 이건 많이 했음
		// System.out.print("1보다 큰 정수를 입력하세요 > ");
		// int num = sc.nextInt();
		// for(int i = num; i > 0; i--) {
		// 		System.out.print(i + " ");
		// }
		// 이러면 끝
		// while 써야해~ if 써야해~ 하면 문법괴물된다
		// 일단은 최대한 단순하게 요구사항을 구현할 수 있는 단순한 방법으로 일단 결과를 뽑아놓고 하나씩 붙이기
		// 단순히 출력 결과만 본 것
		
		/*
		 * 사용자로부터 한 개의 정수값을 입력받아서
		 * 입력받은 숫자부터 1까지의 모든 숫자를 출력해보아요.
		 */
		// 여기까지 한 것이다!
		
		// 단, 입력받는 정수는 1보다 커야합니다. --> 옵션(조건)이 달림, 입력받은 num이 1보다 커야함, 조건이니까 for문을 if문으로 감싸자!
		// 1보다 크지 않을 때는? --> 1이상의 숫자를 입력해주세요. 출력해야 함 --> 아 else
		// 여기까지 하고 확인함, 1보다 클 때 동작하고, 1보다 크지 않을 때 출력문 출력되는 것 확인
		// 다시 사용자에게 값을 입력받을 수 있도록 만들어보아요 --> 출력문까지 했는데 다시 1보다 큰 정수를 입력해달라고 하는 곳으로 가야함 --> 전체를 while문으로 감싸줌
		
		/*
		while(true) {
		// while문으로 감싸줌
		
			System.out.print("1보다 큰 정수를 입력하세요 > ");
			int num = sc.nextInt();
			
			if(num > 1) { // 1보다 커야한다는 조건, 1보다 크면 동작하고, 1보다 크지 않으면 동작을 안하게 됨
			// 조건이 붙었으니 if문으로 감싸줌

				for(int i = num; i > 0; i--) {
					System.out.print(i + " ");
				} // 출력은 끝
				// 문법 괴물이 되면 안된다~ 단순하게 요구사항을 구현할 수 있는 방법으로 결과를 만들고 하나씩 붙이기
				// 1보다 크지 않을때는? --> else
				
				System.out.println();
				
				} else {
					System.out.println("1이상의 숫자를 입력해주세요.");
				}
		
		}
		*/
		// 처음부터 반복을 돌리고~ 조건을 달고~ if-else를 쓰고~ 이러면 머리아픔
		// 작은 단위를 만들어 쌓아올려가기
		// 처음 하는 사람 입장에서는 한붓그리기 할거야 하면 어려움, 안됨
		
		// 여기도 설명 있음
		// do while 배웠으니까 일단 한번은 돌려야겠다
		int num = 0;
		
		do { // 무조건 do에 와서 아래를 돌림
			
			System.out.print("1이상의 숫자를 입력하세요 > ");
			num = sc.nextInt(); // 사용자가 1보다 작은 숫자를 입력한다면?
			
			if(num < 1) System.out.println("1이상의 숫자를 입력해주세요.");
			
		} while(num < 1); // while의 조건식이 참이 되므로 다시 반복시킴 --> num이 1보다 작지 않을때까지 --> num이 1보다 작지 않게 되면 for문으로 내려검
		
		for(; num > 0; num--) {
			System.out.print(num + " ");
		}
		// do while은 잘 안쓰고 보기도 힘들어서 억지로 써보셨음
		
	}
	
	// 한붓그리기? 한획그리기? 금지
	// 개발 최소단위부터 만들어서 살을 붙여야 하는 것

}
