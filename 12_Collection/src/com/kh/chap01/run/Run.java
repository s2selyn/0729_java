package com.kh.chap01.run;

import com.kh.chap01.controller.Integers;

public class Run {

	public static void main(String[] args) {
		
		// 이런 상황, 문제가 있음
		// 정수 값을 여러 개 다루고 싶음 정확하게 몇 개의 정수를 다룰지 알 수 없음 --> 이러려고 클래스를 하나 만들어봤는데, 단순히 정수 여러개 다루기 위해서 필요해서 만든것인데, 만약에 정수가 아니라면? --> 영어 단어라면?
// 8/18 2교시 도입부
		
		// 정수가 몇개나 필요할지 알수가없네~
		// 기본적으로 우리가 생각했을 때 정수가 여러개 필요하다 그러면 뭘 떠올려요? 배열!
		/*
		int[] integers = new int[3];
		integers[0] = 1;
		integers[1] = 5;
		integers[2] = 6;
		// 이렇게 잘 쓰고 있었어요. 밑에 어쩌고저쩌고 해서 잘 먹고살고 있다가 어느날 갑자기 정수가 다섯칸이 필요함, 그럼 고쳐, 다섯칸이 열칸 필요함, 그럼 또 고쳐, 열칸에서 열한칸 필요함, 그럼 또 고쳐..
		// 이렇게 살려다보니 불편함, 아 그러면 어떻게 해야할까? 정수값이 계속 쓸때마다 달라진다, 어떨땐 많이 필요하고 어떨땐 조금 필요하고 이런식으로 불편하다
		// 이런것을 가변적으로 변화하게 다룰 수 있는 방법이 없을까? 배열의 가장 불편한 점 크기가 딱 정해져있기 때문에 중간에 데이터가 더필요하다거나 덜필요하다고해서 바꿔버릴 수 없음
		integers = new int[5]; // 이렇게 하면 중간에 쓴 것들은 싹 날아감, 새로 만들어서 대입하는거니까
		*/
		// 그럼 이런거 좀 가변적으로 다루고싶다, 해서 정수를 여러개 다룰 수 있는 클래스를 만들어서 걔를 좀 사용해봐야겠다 --> Integers라는 클래스를 만들러감
		// 만들고 왔음!
		
		// 그럼 이제 나는 배열이 여러개 다루고 싶으면? int형 배열 대신에 Integers라는 클래스를 사용하는거지
		Integers integers = new Integers(); // 이렇게 만들어서 써야겠다.
		// 그럼 위에서 만들거나 이렇게 만들거나 똑같이 3칸짜리 배열이 만들어짐
		// Integers 밖에서는 Integers가 가지고 있는 배열에 값을 대입할 수 있는 방법이 없음 --> 이 친구의 요소(0, 1, 2)에 값을 대입할 수 있도록 setter 역할을 하는 public 메소드가 있어야함
		// 만들러감
		
		// integers에 요소를 추가할때는 add 메소드를 호출할거고, toString 메소드를 오버라이딩 해놨기때문에 요소들 어떻게 추가됐는지 확인하려면 integers만 출력문에 넣으면 됨
		// System.out.println(integers); // [0, 0, 0]
		
		// 요소 한 번 넣어봅시다!
		// integers.add(10); // [10, 0, 0]
		// integers.add(60); // [10, 60, 0]
		// integers.add(30); // [10, 60, 30]
		// System.out.println(integers);
		
		// 처음에 조건이 뭐였냐면, int를 몇개를 다룰지 알 수 없다가 조건이었음, 지금 세개밖에 안들어감
		// 만약에 여기서 나 하나 더 하고싶은데? 해서
		// integers.add(20); // 이렇게 하면? --> ArrayIndexOutOfBoundsException, 배열의 인덱스가 2번 인덱스까지밖에 없는데 size++돼서 3이 되니까 넘어가버림, 예외 발생
		// 배열이 3칸짜리였는데 이거보다 많은 공간이 필요하게됨, 기존배열은 배열 크기를 늘릴 수 없음, 배열을 새롭게 만들어야함, 배열을 새롭게 만들면 기존에 있던 값들은 사라지므로 새로 만들때 기존에 있던 친구들을 그자리에 그대로 옮겨줘야함, 방법이?
		// 깊은복사
		// System.out.println(integers);
		
		integers.add(10);
		integers.add(30);
		integers.add(30);
		integers.add(60);
		integers.add(60);
		integers.add(60);
		integers.add(20);
		System.out.println(integers);
		// 부족할때마다 공간을 늘려서 문제가 생기지 않도록 해줌
		
		// 바깥에서 배열의 요소를 하나만 뽑아서 활용하고싶다 바깥에서 배열에 직접 접근할 수 없음 --> 안에서 배열의 요소값을 돌려줄 수 있도록 getter 역할을 할 public 메소드가 있어야함 --> 만들러 다녀옴
		int element = integers.get(2);
		
		// 마음에 안드는게 있음, 0은 안나왔으면 좋겠음, 요소를 대입해두지 않은것은 출력이 안되게 하고싶음 --> toString을 바꿔서 작업하면 0은 출력되지 않도록 할 수 있다
		integers.get(10); // 문제는 실제로 만들어진 배열의 사이즈와 출력되는 요소랑 개수가 다름 --> get을 할 때 index가 12칸이 되었으니 10번 인덱스를 get해도, 출력 결과에는 index가 나오지 않는데, get이 문제가 안생기고 쓸 수 있는 현상이 생김
		// 억지로 예외를 발생시켜서 get으로 갈 수 없는 요소에 접근하면 예외가 일어나도록 추가적인 처리를 진행해주고... 이렇게 작업해야함
		System.out.println(element);
		System.out.println(integers);
		
	}

}
