package com.kh.chap04.controller;

	// 클래스 변수 학습할거임~
	// 클래스 변수(static)와 상수 필드에 대해서!
public class StaticController {
	// 클래스 블록(영역) 안(scope안)에서~
	
	// 필드부
	// [ 표현법 ]
	// 접근제한자 예약어(생략가능) 자료형 식별자;
	
	// "static field"를 담고있는 친구 선언함
	public static String str = "static field"; // static 특) 누워있음
	// String str2; // 이탤릭 여부로 구분
	
	// 생성 시점 : 프로그램 실행과 동시에 메모리의 static영역에 할당
	// 소멸 시점 : 프로그램 종료!
	// 객체를 생성을 하지 않고 static 영역에 할당!!
	
	// 지금 얘기하고 있는 것은 변수! 굳이 나눠서 구분을 하고있음, 왜? 어떻게? 구분하느냐 가 중요
	// 왜? 어떻게 선언하고 사용하느냐에 따라서 변수를 쓸 수 있는 범위가 다름, 변수가 살아있는 생명주기가 다름
	// static은 프로그램 시작부터 끝까지, field는 객체의 생성부터 소멸까지, 지역변수는 스코프의 안에서 선언되고 끝까지
	// 어떻게 구분을 하면 되느냐? --> 어떤 메모리 영역에 올라가느냐로 구분
	// 필드는 힙, 변수는 스택, 스태틱은 스태틱 --> 다 똑같이 변수, 값을 넣어놓는 공간이고 어느 메모리영역에 올라가느냐에 따라 명칭이 달라짐
	
	// static == "공유"의 개념이 강함
	// 지역변수는 스코프 끝나면, 필드는 객체 죽으면 사용 못함
	// static은 프로그램 실행과 동시에 static에 올려놓고 거기서 값을 공유해서 사용할 목적
	// 언제 어디서든 편하게 쓰고자 함, 일반적으로 접근제한자를 private으로 두지 않음, 다 쓰는게 목적이니까
	
	// 일반적으로 필드에 스태틱을 붙이겠다는 것은? public static String str = "static field"; -->이런 것 보다는 상수 필드라는 형태로 많이 씀
	/*
	 * 상수 필드
	 * 
	 * [ 표현법 ]
	 * public static final 자료형 상수필드식별자 = 값;
	 * 
	 * static 필드인데 상수로 쓰고싶은 것
	 * 변수시간에 배운 상수는? 일반 변수와의 차이점은? 프로그램 언어에서의 상수는? --> 값을 변경하지 않을 목적으로 선언하는 변수
	 * 일반 변수랑은 다르게 final 키워드도 붙임 --> 상수 필드도 static과 자료형 사이에 final 들어감
	 * 
	 * => 예약어 순서는 상관없음 public final static 으로 작성해도 돌아감(일반적으로는 static final)
	 * => 한 번 지정한 값을 고정해서 쓰겠다. 무조건 초기화를 해야함!!!
	 * 
	 * static : 공유의 목적
	 * final : 한 번 초기화하고 죽었다 깨나도 안바꾸겠다.
	 * 
	 * 값이 변경되면 큰일나는 고정적인 값들을 메모리(static)영역에 올려놓고 공유해서 쓸 목적(프로그램에서 필요한 환경설정 정보 같은것들)
	 * 
	 * 상수 필드 네이밍도 반드시 대문자로 작성해야함!
	 * 
	 */
	
	public static final String JAVA_VERSION = "21"; // final 특 ) 두꺼워짐
	// 나이거 절대 안바꿀거고 값 안바꿀거고 static에 올려놓을거고 이거 그대로쭉갈거야~
	// 스태틱특 눕다(이탤릭), 파이널특 볼드
	
}
