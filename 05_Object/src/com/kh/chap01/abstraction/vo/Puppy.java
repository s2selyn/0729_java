package com.kh.chap01.abstraction.vo;

	//여태까지 했던 메소드 만들기는 졸업!

	/*
	 * public class 클래스식별자 {
	 * 		
	 * 		// 앞으로 만들 클래스는 스코프 안의 영역(블록)을 세개로 나누어서 만들것임
	 * 
	 * 		// 필드부
	 * 
	 * 		// 생성자부
	 * 
	 *		// 메소드부
	 * 
	 * }
	 * 
	 */

public class Puppy {
	
	// 필드부 : 현실세계의 독립적인 존재의 속성을 의미
	// 속성을 표현할 수 있는 영단어들 : property, attribute, field, variable(넓게 봤을 때) --> 기술, 언어, 도구에 따라서 다른 단어
	// 우리는 속성을 "현실 세계의 값을 저장할 수 있는 공간이 필요하구나" 라고 받아들이면 됨
	// 종, 이름, 나이, 성별, 색상, 몸무게 --> 속성이 됨
	// 속성들을 넣을 공간을 만들어줄것임, 이 공간을 필드라고 부름
	
	// [ 필드부 ]
	// 자료형 필드식별자; 변수선언이랑 똑같아보임 --> 한가지 추가, 자료형 앞에 접근제한자
	// 접근제한자 자료형 필드식별자;
	
	// 접근제한자 : 이 필드에 접근할 수 있는 접근권한을 제어하는 역할(네가지)
	//			 public > protected > default(package friendly) > private
	// 클래스 내부에 필드를 선언할 때는 반드시 접근제한자를 붙일 것!!
	
	// 종, 이름, 나이, 성별, 색상, 몸무게 --> 여섯개의 속성을 저장하기 위해서 여섯개의 필드가 필요함, 접근제한자를 붙여야 함, 아직 public밖에 구경못했음
	public String species;
	// 종을 저장해야 하니 자료형은 String이 맞을 듯
	
	public String name;
	// 이름도 String
	
	public int age;
	// 나이는 정수
	
	public String gender;
	public String color;
	public int weight;
	// 현실세계의 퍼피가 가질수있는, 속성을 저장할 공간

	// [ 생성자부 ] 아직 모르니까 일단 비워뒀음
	
	// [ 메소드부 ] 메소드를 만드는 부분
	// 여태까지의 메소드 만드는 방식은 졸업
	// 여기에 들어갈 것은 Puppy가 가질 수 있는 기능이 들어가야함, Puppy를 만드는 설계도니까!
	// Puppy라는 객체를 만들 설계도니까 Puppy가 수행할 수 있는 기능들만 넣자 --> 밥먹고 싸고 산책하고? 냄새맡기!
	public void sniff() {
		System.out.println(name + "가 킁킁거리며 냄새를 맡습니다.");
	} // 강아지는 냄새맡기 기능을 탑재하고 있다!
	
	// 객체의 관점(두개뿐, 내부적 관점, 외부적 관점)
	// smart 객체 입장에서 : 자신이 가진 sniff 메소드를 호출, 출력문을 출력하면서 이름을 같이 출력하고싶음, 이름은 name이라는 이름의 공간 안에 있음 --> 객체 입장에서는 나의 내부에 있음
	// 내부에 있는 것은 쓰고싶은대로 얼마든지 가져다쓸수있음
	// 같은 클래스 스코프 안에 있음
	// 내부에 있는 것은 그냥 가져다 쓸 수 있음! 내꺼니까!
	
	// 상근이를 다이어트시키고싶다.
	// 강아지의 기능 중에서 짖는 것을 만들어보자
	// 다이어트니까 짖었을 때 weight의 값을 빼주고싶다 --> 어떻게? 짖었다! 하면 5kg을 빼주고싶음 --> if?
	// 몸무게를 표현하는 value값은 지금 60, 현재 weight value 값에서 -5 한 값을 ?
	// weight는 개체마다 다를것이지만, -5 하고 나면 다시 대입해야 함
	// 다시 대입하려고 하는 게 어디에 있나요? 객체 내부에 있음 --> 갖다쓰면 끝
	public void bark() {

		// 살을 뺄 정도면 짖어도 괜찮은데, 어느정도 이하의 몸무게면 짖으면 안됨 --> 조건!
		if(weight > 15) { // 개발자가 의도하지 않은 값이 들어가는 것을 막아줄 수 있음
			System.out.println(name + "가 멍하고 짖습니다.");
			weight = weight - 5;
		} else {
			System.out.println("너나 짖어라 ~");
		}
		
	} // 다이어트용 메소드 생성!
	
	// 설계도를 만들었으니 실제로 객체로 올려보자 --> Run 클래스에서 객체생성해보기
	
}
